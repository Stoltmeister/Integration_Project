@model Integration_Project.Models.VenueInterestsViewModel

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}





@{
    var imgSrc = "Hello";
    if (Model.CurrentVenue.ProfilePicture != null)
    {
        var base64 = Convert.ToBase64String(Model.CurrentVenue.ProfilePicture);
        imgSrc = String.Format("data:image/gif;base64,{0}", base64);
    }
    else
    {
        imgSrc = "https://images.pexels.com/photos/747964/pexels-photo-747964.jpeg";
    }
}
<style>
    .main {
        -webkit-box-shadow: 0px 11px 34px 2px rgba(184,180,184,1);
        -moz-box-shadow: 0px 11px 34px 2px rgba(184,180,184,1);
        box-shadow: 0px 11px 34px 2px rgba(184,180,184,1);
    }
</style>
<div class="container main">
</br>
<style>
    #id{
        
    }
</style>
<div class="row">
    <div class="col-md-3">
        <div class="bottom">
            <h2>Details</h2>
            <h4>@Model.CurrentVenue.Name</h4>
        </div>
    </div>
    <div class="col-md-7">
        <img src=@imgSrc alt="" height="300" width="500" style="border-radius:20px" />
    </div>
</div>
    

<div class="row" style="background-color:#F6F6F6">
    <div class="col-md-6" style="padding-top:3%">
        <dl style="background-color:white">
        <dt>
            @Html.DisplayNameFor(model => model.CurrentVenue.Address)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.CurrentVenue.Address)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CurrentVenue.City)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.CurrentVenue.City)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CurrentVenue.State)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.CurrentVenue.State)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CurrentVenue.Zipcode)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.CurrentVenue.Zipcode)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CurrentVenue.Description)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.CurrentVenue.Description)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CurrentVenue.CreationDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.CurrentVenue.CreationDate)
        </dd>
        <dt>
            @Html.DisplayName("Rate this venue!")
        </dt>
        <dd>
            @{ Html.RenderPartial("_RatingsControl", Model.CurrentVenue);}
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CurrentVenue.WebsiteUrl)
        </dt>
        <dd>
            <a href="http://www.@Model.CurrentVenue.WebsiteUrl">@Model.CurrentVenue.WebsiteUrl</a>
        </dd>
        <dt>Interests</dt>
        @foreach (Interest i in Model.AddedInterests) //might want to limit the amount of intersts in the future
        {
            <dd>&nbsp &nbsp @i.Name: <i>@i.Description</i></dd>
        }
       
        </dl>
        @if (Model.controller == "Event")
        {
            <button class="btn"
                    style="background-color:lightcoral;padding-bottom:10px;border-radius:10px;color:white;margin-bottom:5px" onclick="location.href='@Url.Action("SelectVenue","Events",new { id = Model.eventId})'">
                Back to List
            </button>
        }
        else
        {
            @if (Model.CurrentVenue.CreatedBy == Model.UserId)
            {
                <button class="btn"
                        style="background-color:lightcoral;padding-bottom:10px;border-radius:10px;color:white;margin-bottom:5px" onclick="location.href='@Url.Action("InterestSelection","Venues",new { id = Model.CurrentVenue.Id})'">
                    Add or Remove Interest
                </button>

                <br /><br />
                
                    <button class="btn"
                            style="background-color:lightcoral;padding-bottom:10px;border-radius:10px;color:white;margin-bottom:5px" onclick="location.href='@Url.Action("Edit","Venues",new { id = Model.CurrentVenue.Id})'">
                        Edit
                    </button>

           
            }
            <button class="btn"
                    style="background-color:lightcoral;padding-bottom:10px;border-radius:10px;color:white;margin-bottom:5px" onclick="location.href='@Url.Action("Index","Venues")'">
                Back to List
            </button>
        }
    </div>

    <div class="col-md-6" style="padding-top: 3%">
        <style>
            #map {
                height: 400px;
                width: 100%;
            }
        </style>
        <div id="map"></div>
        <script src="~/js/GoogleMaps.js"></script>
        <script>
            function mapCallback() {
                var name = "@Model.CurrentVenue.Name"
                var address = "@Model.CurrentVenue.Address"
                var latitude = @Model.CurrentVenue.Latitude
                var longitude = @Model.CurrentVenue.Longitude
                var map = initMap(latitude, longitude);

                addMarker(latitude, longitude, name, address, map);
            }
        </script>
        <script src="https://maps.googleapis.com/maps/api/js?key=@ViewBag.googleMapsKey&callback=mapCallback"
                async defer>

        </script>
    </div>
</div>
<div class="row">
    <div class="col-lg-6"></div>
    <div class="col-lg-6">
        @{
            string twitterLink = "https://twitter.com/" + Model.CurrentVenue.TwitterHandle + "?ref_src=twsrc%5Etfw";
        }
        <a class="twitter-timeline" data-height="600" href="@twitterLink"></a>
        <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
        @*How to generate the href attribute from the users twitter url?*@
    </div>
</div>
    </div>









