@model Integration_Project.Models.EventInterestsViewModel

@{
    ViewData["Title"] = "Details";
}
@{

    var imgSrc = "Hello";
    if (Model.CurrentEvent.EventPicture != null)
    {
        var base64 = Convert.ToBase64String(Model.CurrentEvent.EventPicture);
        imgSrc = String.Format("data:image/gif;base64,{0}", base64);
    }
    else
    {
        imgSrc = "https://images.pexels.com/photos/534031/pexels-photo-534031.jpeg";
    }
}
</br>
<div class="container main">
    <div class="jumbotron" style="padding-bottom: 10px; background-image: url(@imgSrc)">
        
                <h1>
                    @Model.CurrentEvent.Name
                </h1>
            
                <h3 style="color:white">
                    Event organizer: @Model.Organizer.FirstName  @Model.Organizer.LastName
                </h3>
            
            @if (Model.isOrganizer && Model.CurrentEvent.Premium == 0)
            {
          
                <button class="btn"
                        style="background-color:lightcoral;border-radius:10px;color:white;margin-bottom:5px;margin-top:auto;margin-left:auto" onclick="location.href='@Url.Action("GetCharge","Events", new { id = Model.CurrentEvent.Id})'">
                    GO PREMIUM
                </button>
            }
        </div>
  


    <link href="~/css/site.css" rel="stylesheet" />

    <style>
            .table-bordered {
                padding: 5px;
                background-color: white;
            }

            .white {
                color: white;
            }

        .main {
            -webkit-box-shadow: 0px 11px 34px 2px rgba(184,180,184,1);
            -moz-box-shadow: 0px 11px 34px 2px rgba(184,180,184,1);
            box-shadow: 0px 11px 34px 2px rgba(184,180,184,1);
        }
        .jumbotron {
            background-attachment: fixed;
            background-position: center;
            background-repeat: no-repeat;
            background-size: cover;
            color: white;
            margin-bottom: 0;
            padding-bottom: 0;
            margin-top: 2%;
            margin-right: 0;
            margin-left: 0;
            padding-left: 0;
            padding-right: 0;
        }  


    </style>
    <div class="row" style="background-color:#F6F6F6">
        <div class="col-md-4">
            <div class="text-center"><h2>Event Information</h2></div>
            <dl class="table-bordered">
                <dt>
                    @Html.DisplayNameFor(model => model.CurrentEvent.StartDate)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.CurrentEvent.StartDate)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.CurrentEvent.EndDate)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.CurrentEvent.EndDate)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.CurrentEvent.Description)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.CurrentEvent.Description)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.CurrentEvent.Premium)
                </dt>
                @if (Model.CurrentEvent.Premium == 0)
                {
                    <dd>
                        No
                    </dd>
                }
                else
                {
                    <dd>
                        Yes
                    </dd>
                }
                <dt>
                    @Html.DisplayNameFor(model => model.CurrentEvent.IsWeatherDependent)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.CurrentEvent.IsWeatherDependent)
                </dd>
                @if (Model.CurrentEvent.IsWeatherDependent == true)
                {
                    <dt>
                        @Html.DisplayNameFor(model => model.Forecast)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Forecast)
                    </dd>
                }
                <dt>
                    @Html.DisplayNameFor(model => model.CurrentEvent.MinParticipants)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.CurrentEvent.MinParticipants)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.CurrentEvent.MaxParticipants)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.CurrentEvent.MaxParticipants)
                </dd>
            </dl>
            @if (Model.isOrganizer)
            {
                <button class="btn"
                        style="background-color:lightcoral;padding-bottom:10px;border-radius:10px;color:white;margin-bottom:5px" onclick="location.href='@Url.Action("Invite","Events", new { id = Model.CurrentEvent.Id})'">
                    Back To Search
                </button>
           
                <button class="btn"
                        style="padding-bottom:10px;background-color:lightcoral;border-radius:10px;color:white;margin-bottom:5px;margin-top:auto;margin-left:auto" onclick="location.href='@Url.Action("GetCharge","Events", new { id = Model.CurrentEvent.Id})'">
                    Edit
                </button>
            }
            <button class="btn"
                    style="background-color:lightcoral;padding-bottom:10px;border-radius:10px;color:white;margin-bottom:5px" onclick="location.href='@Url.Action("Index","Search")'">
                Back To Search
            </button>
        </div>

        <div class="col-md-8">
            <div class="text-center"><h2>Venue Information</h2></div>
            @if (Model.CurrentVenue != null)
            {
                <div class="col-md-6">

                    <dl class="table-bordered">
                        <dt>
                            @Html.DisplayNameFor(model => model.CurrentVenue.Name)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.CurrentVenue.Name)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.CurrentVenue.Description)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.CurrentVenue.Description)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.CurrentVenue.City)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.CurrentVenue.City)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.CurrentVenue.State)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.CurrentVenue.State)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.CurrentVenue.Zipcode)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.CurrentVenue.Zipcode)
                        </dd>
                    </dl>
                    @if (Model.isOrganizer)
                    {
                        <button class="btn"
                                style="background-color:lightcoral;padding-bottom:10px;border-radius:10px;color:white;margin-bottom:5px" onclick="location.href='@Url.Action("SelectVenue","Events",new { id = Model.CurrentEvent.Id})'">
                            Change Venue
                        </button>
                    }
                </div>
                <div class="col-md-6">
                    <style>
                        #map {
                            height: 400px;
                            width: 100%;
                        }
                    </style>
                    <div id="map"></div>
                    <script src="~/js/GoogleMaps.js"></script>
                    <script>
                    function mapCallback() {
                        var name = "@Model.CurrentVenue.Name"
                        var address = "@Model.CurrentVenue.Address"
                        var latitude = @Model.CurrentVenue.Latitude
                        var longitude = @Model.CurrentVenue.Longitude
                        var map = initMap(latitude, longitude);
                        addMarker(latitude, longitude, name, address, map);
                    }
                    </script>
                    <script src="https://maps.googleapis.com/maps/api/js?key=@ViewBag.googleMapsKey&callback=mapCallback"
                            async defer></script>
                </div>
            }
            else
            {
                <h4>No Venue Assigned yet</h4>
                @if (User.IsInRole("Standard") && Model.isOrganizer)
                {
                    <button class="btn"
                            style="background-color:lightcoral;padding-bottom:10px;border-radius:10px;color:white;margin-bottom:5px" onclick="location.href='@Url.Action("SelectVenue","Events",new { id = Model.CurrentEvent.Id})'">
                        Add Venue
                    </button>
                }
            }
        </div>

    </div>




    <div class="row">
        <div class="col-md-6">
            <h3>Interests</h3>
            @if (Model.AddedInterests.Count > 0)
            {
                <div class="table-bordered">
                    @foreach (var item in Model.AddedInterests)
                    {
                        <p>
                            @item.Name : <i>@item.Description</i>
                        </p>
                    }
                </div>
            }
            @if (Model.isOrganizer)
            {

                <a asp-action="InterestSelection" asp-route-id="@Model.CurrentEvent.Id">Add or Remove Interests</a>
            }

        </div>
        <div class="col-md-6">
            <h2>Participants</h2>
            <div class="table-bordered col-md-12" style="display:inline-block">
                @foreach (var person in Model.Participants)
                {
                    <div class="col-sm-3 text-center" style="background-color:darkblue;border-radius:5px;color:white;margin-right:5px">
                        @Html.ActionLink(@person.FirstName + " " + @person.LastName, "Profile", new { id = person.Id, eId = Model.CurrentEvent.Id }, new { @class = "white" })<br>
                    </div>
                }
            </div>
            @if (User.IsInRole("Standard"))
            {
                @if (Model.particpantCount < Model.CurrentEvent.MaxParticipants)
                {
                    @Html.ActionLink("Join This Event", "JoinConfirm", new { Id = Model.CurrentEvent.Id })
                }
                else
                {
                    <p>
                        This Event is currently full
                    </p>
                }
            }
            else
            {
                <p>
                    Please <a asp-area="Identity" asp-page="/Account/Login">login</a> to JOIN!
                </p>
            }

        </div>
    </div>
</div>





